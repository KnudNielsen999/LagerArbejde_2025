
@page "/opretvarenummer"

@using AutoMapper
@using Microsoft.EntityFrameworkCore
@inject ILagerRepository lagerRepository
@inject IMapper mapper
@inject NavigationManager Navigation



<h3>Opret Varenummer</h3>



@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}



<EditForm Model="@viewModel" OnValidSubmit="@CreateItem">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Varenummer:</label>
        <InputText class="form-control" @bind-Value="viewModel.vareNummer" />
        <ValidationMessage For="@(() => viewModel.vareNummer)" />
    </div>
    <div class="form-group">
        <label>Varetekst:</label>
        <InputText class="form-control" @bind-Value="viewModel.vareTekst" />
        <ValidationMessage For="@(() => viewModel.vareTekst)" />
    </div>

    
    <div class="form-group">
        <label>Varemængde:</label>
        <InputNumber class="form-control" @bind-Value="viewModel.vareMaengde" />
        <ValidationMessage For="@(() => viewModel.vareMaengde)" />
    </div>

    <div class="form-group">
        <label>Enhed :  </label>
        <InputSelect @bind-Value="viewModel.enheder" class="form-control">
            <option value="">Vaelg Enhed...</option>
            <option value="1">Stk</option>
            <option value="2">Ltr</option>
            <option value="3">Kasse</option>
            <option value="4">Pose</option>
        </InputSelect>
    </div>

    <div class="form-group">
        <label>Kostpris:</label>
        <InputNumber class="form-control" @bind-Value="viewModel.kostPris" />
        <ValidationMessage For="@(() => viewModel.kostPris)" />
    </div>

    <div class="form-group">
        <label>Max Lager:</label>
        <InputNumber class="form-control" @bind-Value="viewModel.maxLager" />
        <ValidationMessage For="@(() => viewModel.maxLager)" />
    </div>

    <div class="form-group">
        <label>Min Lager:</label>
        <InputNumber class="form-control" @bind-Value="viewModel.minLager" />
        <ValidationMessage For="@(() => viewModel.minLager)" />
    </div>


    <button type="submit" class="btn btn-primary">Opret</button>
</EditForm>


@code {

    private DisplayLagerData viewModel = new DisplayLagerData();

    private string errorMessage;
    //  [Inject]
    // public IMapper mapper { get; set; }

    private void NavigateToOtherPage()
    {
        Navigation.NavigateTo("/Displaylager");
    }


    private async Task CreateItem()
    {

        try
        {
            viewModel.oprDato = DateTime.Now;

            if (viewModel.enheder != "")
            {
                if (viewModel.enheder == "1")
                {
                    viewModel.enheder = "Stk";
                }
                else if (viewModel.enheder == "2")
                {
                    viewModel.enheder = "LTR";
                }
                else if (viewModel.enheder == "3")
                {
                    viewModel.enheder = "Kasse";
                }
                else if (viewModel.enheder == "4")
                {
                    viewModel.enheder = "Pose";
                }

            }
            Lager_Data lagerdata = new();
            var lagermodel=  mapper.Map(viewModel, lagerdata);

            // Gem det nye varenummer i databasen
            await lagerRepository.CreateItemAsync(lagermodel);



            // Nulstil formularen efter oprettelse
            viewModel = new DisplayLagerData();
            errorMessage = null;
            NavigateToOtherPage();

        }
        catch (Exception ex)
        {
            errorMessage = "Der opstod en fejl: " + ex.Message;
        }
    }

    
}